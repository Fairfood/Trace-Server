# Generated by Django 2.2.6 on 2021-03-14 18:05
import common.library
import django.contrib.auth.models
import django.contrib.postgres.fields.jsonb
import django.utils.timezone
from django.conf import settings
from django.contrib.auth import validators
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="FairfoodUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text=(
                            "Designates that this user has all permissions"
                            " without explicitly assigning them."
                        ),
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": (
                                "A user with that username already exists."
                            )
                        },
                        help_text=(
                            "Required. 150 characters or fewer. Letters,"
                            " digits and @/./+/-/_ only."
                        ),
                        max_length=150,
                        unique=True,
                        validators=[validators.UnicodeUsernameValidator()],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="email address",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text=(
                            "Designates whether the user can log into this"
                            " admin site."
                        ),
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text=(
                            "Designates whether this user should be treated as"
                            " active. Unselect this instead of deleting"
                            " accounts."
                        ),
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                ("dob", models.DateField(blank=True, null=True)),
                (
                    "phone",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "address",
                    models.CharField(blank=True, default="", max_length=2000),
                ),
                (
                    "language",
                    models.IntegerField(
                        choices=[(1, "English"), (2, "Dutch")], default=1
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=common.library._get_file_path,
                    ),
                ),
                (
                    "type",
                    models.IntegerField(
                        choices=[(1, "Node user"), (2, "Fairfood admin")],
                        default=1,
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(1, "Created"), (2, "Company Added")],
                        default=1,
                    ),
                ),
                ("terms_accepted", models.BooleanField(default=False)),
                ("privacy_accepted", models.BooleanField(default=False)),
                ("email_verified", models.BooleanField(default=False)),
                ("blocked", models.BooleanField(default=False)),
                (
                    "updated_email",
                    models.EmailField(
                        blank=True, default="", max_length=254, null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Fairfood User",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                (
                    "last_name",
                    models.CharField(
                        blank=True, default="", max_length=100, null=True
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True, default="", max_length=50, null=True
                    ),
                ),
                ("dob", models.DateField(blank=True, null=True)),
                (
                    "birth_city",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "marital_status",
                    models.CharField(
                        blank=True, default="", max_length=50, null=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=100, null=True),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, default="", max_length=50, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TermsAndConditions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "title",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("version", models.CharField(max_length=20)),
                ("default", models.BooleanField(default=False)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="creator_termsandconditions_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updater",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updater_termsandconditions_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-created_on",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ValidationToken",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "key",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(1, "Not used"), (2, "Used")], default=1
                    ),
                ),
                (
                    "expiry",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "type",
                    models.IntegerField(
                        choices=[
                            (1, "Verify Email"),
                            (2, "Change Email"),
                            (3, "Reset Password"),
                            (4, "OTP"),
                            (5, "Magic Link"),
                            (6, "Invite"),
                            (7, "Notification"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "request_data",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, null=True
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="creator_validationtoken_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updater",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updater_validationtoken_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="validation_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-created_on",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserTCAcceptance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("ip", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="creator_usertcacceptance_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.TermsAndConditions",
                    ),
                ),
                (
                    "updater",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updater_usertcacceptance_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-created_on",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserDevice",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text=(
                            "Inactive devices will not be sent notifications"
                        ),
                        verbose_name="Is active",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        null=True,
                        verbose_name="Creation date",
                    ),
                ),
                (
                    "device_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Unique device identifier",
                        max_length=150,
                        null=True,
                        verbose_name="Device ID",
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "type",
                    models.IntegerField(
                        choices=[(1, "Android"), (2, "iOS"), (3, "web")],
                        default=1,
                    ),
                ),
                (
                    "registration_id",
                    models.TextField(
                        blank=True,
                        default="",
                        verbose_name="Registration token",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="creator_userdevice_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updater",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updater_userdevice_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User device",
                "verbose_name_plural": "User devices",
            },
        ),
        migrations.CreateModel(
            name="AccessToken",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=200, unique=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="auth_token",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
