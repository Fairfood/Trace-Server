# Generated by Django 2.2.6 on 2021-03-14 18:05
import common.library
import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
from django.conf import settings
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CITheme",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("is_public", models.BooleanField(default=False)),
                (
                    "primary_colour",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "primary_colour_light",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "secondary_colour",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "text_colour",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "action_colour",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "brand_name",
                    models.CharField(
                        blank=True, default="", max_length=100, null=True
                    ),
                ),
                (
                    "brand_logo",
                    models.FileField(
                        blank=True, upload_to=common.library._get_file_path
                    ),
                ),
                (
                    "brand_website",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "facebook_url",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "linkedin_url",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "instagram_url",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "twitter_url",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "share_facebook_title",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "share_facebook_body",
                    models.CharField(
                        blank=True, default="", max_length=2000, null=True
                    ),
                ),
                (
                    "share_linkedin_title",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "share_linkedin_body",
                    models.CharField(
                        blank=True, default="", max_length=2000, null=True
                    ),
                ),
                (
                    "share_twitter_title",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "share_twitter_body",
                    models.CharField(
                        blank=True, default="", max_length=2000, null=True
                    ),
                ),
                (
                    "share_whatsapp_title",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "share_whatsapp_body",
                    models.CharField(
                        blank=True, default="", max_length=2000, null=True
                    ),
                ),
                (
                    "action_button_text",
                    models.CharField(
                        blank=True, default="", max_length=100, null=True
                    ),
                ),
                (
                    "action_button_url",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "video_title",
                    models.CharField(
                        blank=True, default="", max_length=200, null=True
                    ),
                ),
                (
                    "video_url",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "video_description",
                    models.CharField(
                        blank=True, default="", max_length=1000, null=True
                    ),
                ),
                (
                    "product_placeholder",
                    models.FileField(
                        blank=True, upload_to=common.library._get_file_path
                    ),
                ),
                (
                    "farmer_placeholder",
                    models.FileField(
                        blank=True, upload_to=common.library._get_file_path
                    ),
                ),
                (
                    "actor_placeholder",
                    models.FileField(
                        blank=True, upload_to=common.library._get_file_path
                    ),
                ),
                (
                    "banner_text",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "banner_text_colour",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "banner_image",
                    models.FileField(
                        blank=True, upload_to=common.library._get_file_path
                    ),
                ),
                (
                    "banner_farmer_icon",
                    models.FileField(
                        blank=True, upload_to=common.library._get_file_path
                    ),
                ),
            ],
            options={
                "ordering": ("-created_on",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConsumerInterfaceProduct",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "name",
                    models.CharField(
                        blank=True, default="", max_length=100, null=True
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True, upload_to=common.library._get_file_path
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, default="", max_length=200, null=True
                    ),
                ),
            ],
            options={
                "ordering": ("-created_on",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConsumerInterfaceStage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "title",
                    models.CharField(
                        blank=True, default="", max_length=100, null=True
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True, upload_to=common.library._get_file_path
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "actor_name",
                    models.CharField(
                        blank=True, default="", max_length=100, null=True
                    ),
                ),
                ("position", models.IntegerField(default=0)),
                ("map_zoom_level", models.IntegerField(default=0)),
                ("map_latitude", models.FloatField(default=0.0)),
                ("map_longitude", models.FloatField(default=0.0)),
            ],
            options={
                "ordering": ("position",),
            },
        ),
        migrations.CreateModel(
            name="DashboardTheme",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("default", models.BooleanField(default=False)),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=common.library._get_file_path,
                    ),
                ),
                (
                    "colour_primary_alpha",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_primary_beta",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_primary_gamma",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_primary_delta",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_secondary",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_font_alpha",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_font_beta",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_font_negative",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_border_alpha",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_border_beta",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_background",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_sidebar",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_map_background",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_map_clustor",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_map_marker",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_map_selected",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
                (
                    "colour_map_marker_text",
                    models.CharField(
                        blank=True, default="", max_length=20, null=True
                    ),
                ),
            ],
            options={
                "ordering": ("-created_on",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MenuItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "title",
                    models.CharField(
                        blank=True, default="", max_length=100, null=True
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                (
                    "target",
                    models.CharField(
                        blank=True, default="", max_length=500, null=True
                    ),
                ),
                ("position", models.IntegerField(default=0)),
            ],
            options={
                "ordering": ("position",),
            },
        ),
        migrations.CreateModel(
            name="NodeStats",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "last_updated",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("is_outdated", models.BooleanField(default=True)),
                (
                    "outdated_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("supply_chain_count", models.IntegerField(default=0)),
                ("traceable_chains", models.IntegerField(default=0)),
                ("tier_count", models.IntegerField(default=0)),
                ("chain_length", models.FloatField(default=0.0)),
                ("actor_count", models.IntegerField(default=0)),
                ("supplier_count", models.IntegerField(default=0)),
                ("farmer_count", models.IntegerField(default=0)),
                ("invited_actor_count", models.IntegerField(default=0)),
                ("mapped_actor_count", models.IntegerField(default=0)),
                ("active_actor_count", models.IntegerField(default=0)),
                ("pending_invite_count", models.IntegerField(default=0)),
                (
                    "operation_stats",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=dict, null=True
                    ),
                ),
                (
                    "supplier_coorinates",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=dict, null=True
                    ),
                ),
                (
                    "farmer_coorinates",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=dict, null=True
                    ),
                ),
                (
                    "buyer_ids",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=list, null=True
                    ),
                ),
                (
                    "supplier_ids",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=list, null=True
                    ),
                ),
                (
                    "farmer_ids",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=list, null=True
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="creator_nodestats_objects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-created_on",),
                "abstract": False,
            },
        ),
    ]
